<?xml version="1.0" encoding="ISO-8859-1"?>
<modification>
  <id>ControleInterno</id>
  <name>Controle Interno</name>
  <ecidade-version>2.3.36</ecidade-version>
  <file path='model/agendaPagamento.model.php'>
    <operation>
      <search><![CDATA[/*[Extensao] - Controle Interno*/]]></search>
      <add position="after">
        <![CDATA[
    $oPlugin       = new Plugin ( null, 'ControleInterno' );
    $aConfiguracao = PluginService::getPluginConfig ( $oPlugin );
    
    $sInstituicoesSemAnalise = $aConfiguracao["InstituicaoSemAnalise"];
    $sWhere .= " and (exists (select 1
		                        from plugins.controleinternoempenho
		                             inner join plugins.controleinternoempenhoempempenho on controleinternoempenhoempempenho.controleinternoempenho = controleinternoempenho.sequencial
		                       where controleinternoempenhoempempenho.empempenho = empempenho.e60_numemp
		                         and situacao_aprovacao in (5)) 
    		             or e60_instit in (".$sInstituicoesSemAnalise."))";
          ]]>
      </add>
    </operation>
    
    <!--                                                               -->
    <!-- MODIFICACAO EQUIPE NATAL                                      -->
    <!--                                                               -->
    <operation>
      <search regex="true"><![CDATA[(function getMovimentosPagos\s*)]]></search>
      <add>
        <![CDATA[
  /* [Extensao ControleInterno] - Nova funcao para listar movimentos para retencoes */      
  function getMovimentosAgendaParaRetencao($sWhere = null, $sJoin, $lTrazfornecedor = true, $lTrazContaPagadora = true,$sCamposAdicionais='', $lVinculadas=true, $sCredorCgm = null) {

    $sOrderBy = "e81_codmov, e50_codord";
    if ($this->orderBy != null) {
      $sOrderBy = $this->orderBy;
    }

    $sWhereFiltroCgm = '';
    if (!empty($sCredorCgm)) {
      $sWhereFiltroCgm = " and empempenho.e60_numcgm = {$sCredorCgm} ";
    }
    $oDaoEmpAgeMov  = new cl_pagordem;

    /* [Extensão] - Filtro da Despesa */
    $sDotacoes = PermissaoUsuarioEmpenho::getDotacoesPorAnoDoUsuario(
      db_getsession('DB_id_usuario'),
      db_getsession('DB_anousu'),
      PermissaoUsuarioEmpenho::PERMISSAO_MANUTENCAO
    );
    if (!empty($sDotacoes)) {
      $sWhere .= " and {$sDotacoes} ";
    }

    $sSqlMovimentos = $oDaoEmpAgeMov->sql_query_empagemovforma(
      null,
      "
      empagemov.e81_codmov,
      (select e25_empagetipotransmissao from empagemovtipotransmissao where e25_empagemov = e81_codmov limit 1) as e25_empagetipotransmissao,
      (select fatura 
         from plugins.empagemovtipotransmissaofatura 
              inner join empagemovtipotransmissao on empagemovtipotransmissao = e25_sequencial 
        where e25_empagemov = e81_codmov 
        limit 1) as fatura,
      e80_codage,
      case when a.z01_numcgm       is not null then a.z01_numcgm else cgm.z01_numcgm end as z01_numcgm,
      case when trim(a.z01_nome)   is not null then a.z01_nome   else cgm.z01_nome   end as z01_nome,
      case when trim(a.z01_cgccpf) is not null then a.z01_cgccpf else cgm.z01_cgccpf end as z01_cgccpf,
      e50_data,
      e80_data,
      e60_anousu,
      e60_numemp,
      e60_codemp,
      o15_codigo,
      e86_data,
      e50_codord,
      e53_valor,
      o58_codigo,
      o58_orgao,
      o58_unidade,
      o58_localizadorgastos,
      e53_vlranu,
      k12_data,
      e91_cheque,
      e91_codmov,
      e71_codnota,
      e79_concarpeculiar,
      e60_concarpeculiar,
      (case when e85_codmov is null then
           (select e28_empagetipo
         from empageformacgm
        where e28_numcgm = e60_numcgm)
        else e85_codtipo end) as e85_codtipo,
      e97_codmov,
      e90_cancelado,
      case
        when e90_cancelado is true
          then null
        else e90_codmov
      end as e90_codmov,
      e98_contabanco,
      (case when e97_codforma is null then
       (select e97_codforma
              from empage
             INNER JOIN empagemov      ON empagemov.e81_codage = empage.e80_codage
             INNER JOIN empord         ON empord.e82_codmov = empagemov.e81_codmov
             INNER JOIN pagordem       ON pagordem.e50_codord = empord.e82_codord
             INNER JOIN pagordemele    ON pagordemele.e53_codord = pagordem.e50_codord
             INNER JOIN empempenho     ON empempenho.e60_numemp = pagordem.e50_numemp
             inner join empagemovforma on empagemovforma.e97_codmov   = empagemov.e81_codmov
             where empempenho.e60_instit = ".db_getsession("DB_instit") ."
                   {$sWhereFiltroCgm}
             order by e81_codmov desc limit 1)
        else e97_codforma end) as e97_codforma ,
      e42_dtpagamento,
      e53_vlrpag,
      round(e81_valor + (select coalesce(sum(e34_valordesconto), 0) from pagordemdesconto where e34_codord = e50_codord), 2) as e81_valor,
      e86_codmov,
      e43_sequencial,
      e42_sequencial,
      fc_validaretencoesmesanterior(e81_codmov,null) as validaretencao,
      fc_valorretencaomov(e81_codmov,false) as valorretencao,
      coalesce(e43_valor,0)  as e43_valor {$sCamposAdicionais}",
      $sOrderBy,
      $sWhere,
      $sJoin
    );

    $rsMovimento  = $oDaoEmpAgeMov->sql_record($sSqlMovimentos);
    $aNotas       = array();

    if ($oDaoEmpAgeMov->numrows > 0) {

      for ($iMovimentos = 0; $iMovimentos < $oDaoEmpAgeMov->numrows; $iMovimentos++) {

        $oMovimento        = db_utils::fieldsMemory($rsMovimento, $iMovimentos,false, false, $this->getUrlEncode());
        $oMovimento->validaretencao = $oMovimento->validaretencao=="t"?true:false;
        if ($lTrazContaPagadora) {
          $aContasVinculadas = $this->getContasRecurso($oMovimento->e50_codord, $lVinculadas);
          $oMovimento->aContasVinculadas = $aContasVinculadas;
        }
        if ($lTrazfornecedor) {
          $oMovimento->aContasFornecedor = $this->getContasFornecedor($oMovimento->z01_numcgm);
        }
        $aNotas[] = $oMovimento;
      }
    }


    return $aNotas;
  }
  
  $1]]>
      </add>
    </operation>
    
  </file>

  <file path='classes/empenho.php'>
    <operation>
      <search><![CDATA[/*[Extensao] - Controle Interno Parte 1*/]]></search>
      <add position="after">
        <![CDATA[
    $this->analiseAutomaticaControleInterno($codnota, $o56_elemento, $numemp);
          ]]>
      </add>
    </operation>
    <operation>
      <search><![CDATA[/*[Extensao] - Controle Interno Parte 2*/]]></search>
      <add position="after">
        <![CDATA[
    /**
   * Verifica se deve fazer análise automática da liquidação do empenho e realiza a aprovação, se for o caso.
   *
   * @param integer $iCodigoNota    Código da nota de liquidação do empenho.
   * @param string  $sEstrutural    Estrutural do empenho.
   * @param integer $iNumeroEmpenho Número do empenho.
   *
   * @throws Exception
   */
  private function analiseAutomaticaControleInterno($iCodigoNota, $sEstrutural, $iNumeroEmpenho) {

    if (!ControleInterno::verificaAnaliseAutomatica($sEstrutural)) {
      return;
    }

    $sCampos = " e69_codnota, e60_vlremp, e60_vlrliq, e60_vlranu ";
    $sOrdem  = " e69_codnota ";
    $sWhere  = " e69_numemp = {$iNumeroEmpenho} and (exists(select 1 from plugins.empenhonotacontroleinterno where nota = e69_codnota) or e70_vlranu = 0)";

    $oDaoEmpNota = new cl_empnota();
    $sSqlEmpNota = $oDaoEmpNota->sql_query_valor_financeiro(null, $sCampos, $sOrdem, $sWhere);
    $rsEmpNota   = $oDaoEmpNota->sql_record($sSqlEmpNota);

    //Se não tiver liquidações para o empenho, é o primeiro, então não deve aprovar automaticamente.
    if ($oDaoEmpNota->numrows < 1) {
      return;
    }

    $oEmpNota = db_utils::fieldsMemory($rsEmpNota, 0);

    //Primeira nota, não deve aprovar automaticamente.
    if ($oEmpNota->e69_codnota == $iCodigoNota) {
      return;
    }

    // Última liquidação (liquidou tudo), não deve aprovar automaticamente.
    if ($oEmpNota->e60_vlremp - $oEmpNota->e60_vlrliq  - $oEmpNota->e60_vlranu == 0) {
      return;
    }

    //Verifica se alguma liquidação já foi liberada.
    for ($i=0; $i < pg_numrows($rsEmpNota); $i++) { 
      $oEmpNota = db_utils::fieldsMemory($rsEmpNota, $i);
      $oControleInternoLiquidacao = new ControleInternoMovimento($oEmpNota->e69_codnota);
      if ($oControleInternoLiquidacao->getSituacaoFinal() == ControleInterno::SITUACAO_APROVADA) {
        $lTemAprovada = true;
        break;
      }      
    }
    if (!$lTemAprovada) {
      return;
    }

    //Cria uma aprovação automática.
    $oControleInterno = new ControleInternoMovimento($iCodigoNota);
    $oControleInterno->criaAutorizacaoAutomatica();
  }
          ]]>
      </add>
    </operation>

    <operation>
      <search><![CDATA[/** [Extensao - Controle Interno - Estorno de Liquidação] */]]></search>
      <add position="after">
        <![CDATA[
    $oPlugin = new Plugin(null, 'ControleInterno');
    $aConfiguracoes = PluginService::getPluginConfig($oPlugin);
    
    if ($aConfiguracoes['ValidaEstornoLiquidacao'] == 't') {

      if (ControleInterno::liberado($codnota)) {
  
         $this->erro_status  = '0';
         $this->erro_msg     = "A nota {$codnota} encontra-se liberada pelo Controle Interno.\n\n";
         $this->erro_msg    .= "Para realizar o estorno desta liquidação, a liberação da nota deverá ser cancelada pelo Controle Interno.";
         return false;
      }
    }
          ]]>
      </add>

    </operation>

<!--                                          -->
<!-- CUSTOMIZACOES EQUIPE NATAL/RN            --> 
<!--                                          -->

    <operation>
      <search regex="true"><![CDATA[if\s*\(\s*\$e69_dtnota\s*<\s*\$oDataEmpenho->e60_emiss\s*\)\s*{]]></search>
      <add>
        <![CDATA[$oPlugin = new Plugin(null, 'ControleInterno');
      $aConfiguracoes = PluginService::getPluginConfig($oPlugin);
      if ( $e69_dtnota < $oDataEmpenho->e60_emiss && $aConfiguracoes['ValidaDataNotaLiquidacao'] == 't') {]]>
      </add>
    </operation>
  </file>

  <file path='forms/db_frmliquidasemordem.php'>
    <operation>
      <search regex="true" flag="U"><![CDATA[(db_input\(\'e69_localrecebimento.*\?>(.*\n*)*<\/tr>)]]></search>
      <add>
        <![CDATA[$1
        
          <!--[Extensao ControleInterno - LiquidacaoCompetencia] inclusao do campo -->
          <? 
            if ($operacao == 1) {
            
              $iEdicaoCampo = 1;
              //plugin OrdenadorPagamentoEmpenho
              if (isset($lUtilizaOrdenadorPagamentoEmpenho)) {
                $iEdicaoCampo = 3;
              } 
              
              echo "<tr>
                      <td> 
                       <strong>Mês de Competência:</strong> 
                      </td>
                      <td colspan='3'>";                
                        $aMesesCompetencia = array_combine(range(1,12), range(1,12));
                        array_unshift($aMesesCompetencia, ""); 
                        db_select("mes_competencia",$aMesesCompetencia, true, $iEdicaoCampo, "style='width: 50px;'");   
          
                        $aAnosCompetencia = array();
                        $aAnosCompetencia[""] = "";
                        for ($iAno = db_getsession("DB_anousu") - 3; $iAno <= db_getsession("DB_anousu"); $iAno++) {
                        	$aAnosCompetencia[$iAno] = $iAno;
                        }
                        db_select("ano_competencia", $aAnosCompetencia, true, $iEdicaoCampo, "style='width: 80px;'");  
              echo "  </td>
                    </tr>"; 
            } 
          ?>
          ]]>
      </add>
    </operation>
    
    <operation>
      <search regex="true"><![CDATA[(js_divCarregando\("Aguarde, Liquidando.*msgLiq"\);)]]></search>
      <add>
        <![CDATA[
      /* [Inicio plugin ControleInterno - LiquidacaoCompetencia] */  
      if ($F("mes_competencia") == 0 || $F("ano_competencia") == "0") {
      
        alert('Informe o Mês de Comptência da Nota');
        $('pesquisar').disabled = false;
        $('confirmar').disabled = false;
      
        return false;
      }
      /* [Fim plugin ControleInterno - LiquidacaoCompetencia] */
      
      $1]]>
      </add>
    </operation>    
    
    <operation>
      <search regex="true"><![CDATA[(oParam.oInfoNota\s*=\s*oInfoNota\s*;)]]></search>
      <add>
        <![CDATA[
      /* [Inicio plugin ControleInterno - LiquidacaoCompetencia] */  
        oParam.mes_competencia = $F('mes_competencia');
        oParam.ano_competencia = $F('ano_competencia');
      /* [Fim plugin ControleInterno - LiquidacaoCompetencia] */
      $1]]>
      </add>
    </operation>
  </file>
  
  <file path='forms/db_frmliquida.php'>
    <operation>
      <search regex="true" flag="U"><![CDATA[(<\?\n*.*echo\s*"\s*<tr>((\n*.*)*)<td\s*colspan='3'>\s*";)]]></search>
      <add>
        <![CDATA[
          <? 
           if ($operacao == 1) {
             echo "<tr>
                     <td> 
                      <strong>Mês de Competência:</strong> 
                     </td>
                     <td>";                
                       $mes_competencia = date("m", db_getsession("DB_datausu"));
                       db_select("mes_competencia", array_combine(range(1,12), range(1,12)), true, 1, "style='width: 50px;'");  

                       $ano_competencia = db_getsession("DB_anousu");
                       $ano_inicio = $ano_competencia - 2;
                       db_select("ano_competencia", array_combine(range($ano_inicio, $ano_competencia), range($ano_inicio, $ano_competencia)), true, 1, "style='width: 80px;'");  
             echo "  </td>
                   </tr>"; 
           } 
          ?>
        
        $1]]>
      </add>
    </operation>
    <operation>
      <search regex="true"><![CDATA[(oParam.z01_credor\s*=\s*\$F\(\s*'e49_numcgm'\s*\)\s*;)]]></search>
      <add>
        <![CDATA[$1
     /* [Inicio plugin LiquidacaoCompetencia] */        
         if ($('mes_competencia')) {
           oParam.mes_competencia = $F('mes_competencia');
           var ano_competencia = document.getElementById('ano_competencia');
           oParam.ano_competencia = ano_competencia.options[ano_competencia.selectedIndex].innerHTML;          
         }
     /* [Fim plugin LiquidacaoCompetencia] */     
        ]]>
      </add>
    </operation>
  </file>
  
  <file path='emp4_liquidacao004.php'>
    <operation>
      <search regex="true" flag="U"><![CDATA[(\$aOrdensGeradas\s*=((\n*.*)*))(echo\s*\$oRetorno\s*;)]]></search>
      <add>
        <![CDATA[$1
        
          /* [Inicio plugin LiquidacaoCompetencia] */        
          $oLiquidacaoCompetencia = db_utils::getDao("liquidacaocompetencia");
          foreach ($aOrdensGeradas as $iIndOrdensGeradas => $iOrdem) {
            $oLiquidacaoCompetencia->pagordem = $iOrdem;
            $oLiquidacaoCompetencia->mes   = $objJson->mes_competencia;
            $oLiquidacaoCompetencia->ano   = $objJson->ano_competencia;
            $oLiquidacaoCompetencia->incluir(null);
            if ($oLiquidacaoCompetencia->erro_status == 0) {
               throw new Exception($oLiquidacaoCompetencia->erro_msg);
            }
          }
          /* [Fim plugin LiquidacaoCompetencia] */
                   
          $4]]>
      </add>
    </operation>
    <operation>
      <search regex="true"><![CDATA[(}\n*.*echo\s*\$oRetorno;\n*.*}\s*else\s*{\s*\n*.*urlencode\(\$objEmpenho->sMsgErro\),\s*"e50_codord"\s*=>\s*null\s*\);)]]></search>
      <add>
        <![CDATA[
          /* [Inicio plugin LiquidacaoCompetencia] */        
          $oLiquidacaoCompetencia = db_utils::getDao("liquidacaocompetencia");
          $oLiquidacaoCompetencia->pagordem = $oDadosRetorno->e50_codord;
          $oLiquidacaoCompetencia->mes   = $objJson->mes_competencia;
          $oLiquidacaoCompetencia->ano   = $objJson->ano_competencia;
          $oLiquidacaoCompetencia->incluir(null);
          if ($oLiquidacaoCompetencia->erro_status == 0) {
            throw new Exception($oLiquidacaoCompetencia->erro_msg);
          }
          /* [Fim plugin LiquidacaoCompetencia] */
			    
        $1
        ]]>
      </add>
    </operation>

    <operation>
      <search regex="true"><![CDATA[(\$oListaClassificacaoCredor->validarDatas\(.*\);)]]></search>
      <add>
        <![CDATA[$oPlugin = new Plugin(null, 'ControleInterno');
      $aConfiguracoes = PluginService::getPluginConfig($oPlugin);
      if ($aConfiguracoes['ValidaDataNotaLiquidacao'] == 't') {
        $1
      }]]>
      </add>
    </operation>
  </file>

  <file path='emp1_lancaretencoes001.php'>
    <operation>
      <search regex="true"><![CDATA[(var\s*sJson\s*=\s*'{"exec":\s*")(getMovimentos)(".*"params".*;)]]></search>
      <add>
        <![CDATA[$1$2ParaRetencao$3]]>
      </add>
    </operation>
  </file>

  <file path='emp4_manutencaoPagamentoRPC.php'>
    <operation>
      <search regex="true"><![CDATA[(case\s*('|")efetuarPagamentoSlip('|")\s*:)]]></search>
      <add>
        <![CDATA[/* [Extensao ControleInterno] - Nova funcao para listar movimentos para retencoes */
  case "getMovimentosParaRetencao" :

    // variavel de controle para configuração de arquivos padrao OBN
    $lArquivoObn = false;
    $lTrazContasFornecedor = false;
    $lTrazContasRecurso    = false;
    if (!empty($oParam->params[0]->lObn)) {
    
        $lTrazContasFornecedor = false;
        $lTrazContasRecurso    = true;
        $lArquivoObn = true;
    }

    $oAgenda = new agendaPagamento();
    $oAgenda->setUrlEncode(true);
    $sJoin   = '';
    $sWhereIni  = " ((round(e53_valor,2)-round(e53_vlranu,2)-round(e53_vlrpag,2)) > 0 ";
    $sWhereIni .= " and (round(e60_vlremp,2)-round(e60_vlranu,2)-round(e60_vlrpag,2)) > 0) ";
    $sWhereIni .= " and corempagemov.k12_codmov is null and e81_cancelado is null";
    $sWhereIni .= " and e80_data  <= '".date("Y-m-d",db_getsession("DB_datausu"))."'";
    $sWhereIni .= " and e60_instit = ".db_getsession("DB_instit");
    $sWhere     = $sWhereIni;
    $oAgenda->setOrdemConsultas("e82_codord, e81_codmov");
    if ($oParam->params[0]->iOrdemIni != '' && $oParam->params[0]->iOrdemFim == "") {
      $sWhere .= " and e50_codord = {$oParam->params[0]->iOrdemIni}";
    } else if ($oParam->params[0]->iOrdemIni != '' && $oParam->params[0]->iOrdemFim != "") {
      $sWhere .= " and e50_codord between  {$oParam->params[0]->iOrdemIni} and {$oParam->params[0]->iOrdemFim}";
    }

    if ($oParam->params[0]->dtDataIni != "" && $oParam->params[0]->dtDataFim == "") {
      $sWhere .= " and e50_data = '".implode("-",array_reverse(explode("/",$oParam->params[0]->dtDataIni)))."'";
    } else if ($oParam->params[0]->dtDataIni != "" && $oParam->params[0]->dtDataFim != "") {

      $dtDataIni = implode("-",array_reverse(explode("/",$oParam->params[0]->dtDataIni)));
      $dtDataFim = implode("-",array_reverse(explode("/",$oParam->params[0]->dtDataFim)));
      $sWhere .= " and e50_data between '{$dtDataIni}' and '{$dtDataFim}'";

    } else if ($oParam->params[0]->dtDataIni == "" && $oParam->params[0]->dtDataFim != "") {

      $dtDataFim  = implode("-",array_reverse(explode("/",$oParam->params[0]->dtDataFim)));
      $sWhere    .= " and e50_data <= '{$dtDataFim}'";
    }

    if ($oParam->params[0]->iCodEmp!= '') {
      if (strpos($oParam->params[0]->iCodEmp,"/")) {
        $aEmpenho = explode("/",$oParam->params[0]->iCodEmp);
        $sWhere .= " and e60_codemp = '{$aEmpenho[0]}' and e60_anousu={$aEmpenho[1]}";
      } else {
        $sWhere .= " and e60_codemp = '{$oParam->params[0]->iCodEmp}' and e60_anousu=".db_getsession("DB_anousu");
      }
    }

    $sCredorCgm = '';

    if ($oParam->params[0]->iNumCgm != '') {

      $sWhere    .= " and (e60_numcgm = {$oParam->params[0]->iNumCgm})";
      $sCredorCgm = $oParam->params[0]->iNumCgm;
    }
    if ($oParam->params[0]->iAutorizadas == 2) {

      $lAutorizadas      = true;
      if ($oParam->params[0]->sDtAut != "") {

        $sDtAut   = implode("-", array_reverse(explode("/", $oParam->params[0]->sDtAut)));
        $sWhere .= " and e42_dtpagamento = '{$sDtAut}'";

      }

      $sWhere .= " and e43_autorizado is true ";

    } else if ($oParam->params[0]->iAutorizadas == 3) {

      $sWhere .= " and e43_empagemov is null";
    }

    if ($oParam->params[0]->iOPauxiliar != '') {

      $sWhere .= " and e42_sequencial = {$oParam->params[0]->iOPauxiliar}";
    }
    if ($oParam->params[0]->iRecurso != '') {

      $sWhere .= " and o15_codigo = {$oParam->params[0]->iRecurso}";
    }
    if ($oParam->params[0]->iOPManutencao != '') {

      $sWhere .= " or ( e42_sequencial = {$oParam->params[0]->iOPManutencao}  and $sWhereIni)";
      $oAgenda->setOrdemConsultas("e42_sequencial,e43_sequencial, e81_codmov,e50_codord");

    } else if (!empty($oParam->params[0]->e03_numeroprocesso)) {

      $sProcesso = addslashes(db_stdClass::normalizeStringJson($oParam->params[0]->e03_numeroprocesso));
      $sWhere   .= " and e03_numeroprocesso = '{$sProcesso}'";
    }

    $sJoin   .= " left join empagenotasordem on e81_codmov         = e43_empagemov  ";
    $sJoin   .= " left join empageordem      on e43_ordempagamento = e42_sequencial ";
    $sJoin   .= " left join pagordemprocesso on e50_codord = e03_pagordem ";

    if (property_exists($oParam->params[0], 'orderBy') && $oParam->params[0]->orderBy == "cgm.z01_nome") {
      $oAgenda->setOrdemConsultas("case when trim(a.z01_nome)   is not null then a.z01_nome   else cgm.z01_nome end");
    }

    if (!empty($oParam->params[0]->codigo_classificacao)) {

      $sJoin  .= " left join classificacaocredoresempenho on cc31_empempenho = e60_numemp ";
      $sWhere .= " and cc31_classificacaocredores = {$oParam->params[0]->codigo_classificacao} ";
    }

    if (!empty($oParam->params[0]->data_vencimento)) {

      $oDataVencimento = new DBDate($oParam->params[0]->data_vencimento);
      $sWhere .= " and e69_dtvencimento = '{$oDataVencimento->getDate()}'";
    }

    $aOrdensAgenda = $oAgenda->getMovimentosAgendaParaRetencao($sWhere,$sJoin,$lTrazContasFornecedor , $lTrazContasRecurso,'',$oParam->params[0]->lVinculadas, $sCredorCgm);

    if (isset($oParam->params[0]->lTratarMovimentosConfigurados) && $oParam->params[0]->lTratarMovimentosConfigurados == true) {

      $aMovimentosConfigurados = array();
      foreach ($aOrdensAgenda as $oStdMovimento) {

        if ($oStdMovimento->e91_codmov != "" || $oStdMovimento->e90_codmov != "") {
          continue;
        } else {
          $aMovimentosConfigurados[] = $oStdMovimento;
        }
      }
      $aOrdensAgenda = $aMovimentosConfigurados;
    }

    $oRetono->status           = 2;
    $oRetono->mensagem         = "";
    $oRetono->aNotasLiquidacao = array();
    if (count($aOrdensAgenda) > 0) {

      $oRetono->status           = 1;
      $oRetono->mensagem         = 1;
      $oRetono->totais           = $oAgenda->getTotaisAgenda($sWhere);
      $oRetono->aNotasLiquidacao = $aOrdensAgenda;
    }
    echo JSON::create()->stringify($oRetono);
    
    break;
    
    $1]]>
      </add>
    </operation>
  </file>

  <file path='func_empempenho001.php'>
    <operation>
      <search regex="true"><![CDATA[(<td.*\n*\s*<\?.*echo\s*\$sRestosPagar;.*\?>\n*\s*<\/td>)]]></search>
      <add>
        <![CDATA[$1
        <td nowrap="nowrap" width="160" align="left" nowrap title="Anexo">
          <strong>Anexo:</strong>
        </td>
        <td nowrap="nowrap"  align="right" class='valores' style="width:80px">
          <?=$o58_localizadorgastos; ?>
        </td>
        <td nowrap="nowrap"  align="right" class='valores' >
          <?php 
            $oLocalizadorGastos = db_utils::getDao('ppasubtitulolocalizadorgasto');
            $sSqlLocalizadorGastos = $oLocalizadorGastos->sql_query($o58_localizadorgastos);
            $rsLocalizadorGastos = $oLocalizadorGastos->sql_record($sSqlLocalizadorGastos);
            $oDadosLocalizador = db_utils::fieldsMemory($rsLocalizadorGastos, 0);
            echo $oDadosLocalizador->o11_descricao; ?>
        </td>]]>
      </add>
    </operation>
  </file>
  
  <file path='emp2_relempenho002.php'>
    <operation>
      <search regex="true"><![CDATA[(25(.*"DOCUMENTO"))]]></search>
      <add>
        <![CDATA[50$2]]>
      </add>
    </operation>
    <operation>
      <search regex="true"><![CDATA[(25(.*\$c53_descr))]]></search>
      <add>
        <![CDATA[50$2]]>
      </add>
    </operation>
    <operation>
      <search regex="true"><![CDATA[(\$pdf->Cell\(.*"VALOR",\s*1.*\))]]></search>
      <add>
        <![CDATA[$pdf->Cell(25, $tam, "VALOR", 1, 0, "C", 1);
                    $pdf->Cell(25, $tam, "COMPETENCIA", 1, 1, "C", 1); ]]>
      </add>
    </operation>
    <operation>
      <search regex="true"><![CDATA[(\$reslancam\s*=\s*\$clconlancamemp->sql_record\(\$clconlancamemp->sql_query\(.*\*)]]></search>
      <add>
        <![CDATA[$1, (select mes||'/'||ano from plugins.liquidacaocompetencia inner join conlancamord on c80_codord = pagordem where c80_codlan = c70_codlan) as competencia]]>
      </add>
    </operation>   
    <operation>
      <search regex="true"><![CDATA[(\$pdf->Cell\(.*\$c70_valor.*\);)]]></search>
      <add>
        <![CDATA[$pdf->Cell(25, $tam, $c70_valor, $iBorda, 0, "R", $preenche);
                        $pdf->Cell(25, $tam, $competencia, $iBorda, 1, "R", $preenche); ]]>
      </add>
    </operation>  
  </file>  

</modification>
